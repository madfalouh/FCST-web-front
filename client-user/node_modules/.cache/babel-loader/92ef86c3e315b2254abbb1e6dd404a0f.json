{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\mechi\\\\Desktop\\\\Projects\\\\chat-application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\mechi\\\\Desktop\\\\Projects\\\\chat-application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\mechi\\\\Desktop\\\\Projects\\\\chat-application\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string'; //used to get data from URL\n\nimport io from \"socket.io-client\";\nimport './Chat.css';\nimport InfoBar from '../InfoBar/InfoBar';\nvar socket;\n\nvar Chat = function Chat(_ref) {\n  var location = _ref.location;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      room = _useState4[0],\n      setRoom = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      message = _useState6[0],\n      setMessage = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      messages = _useState8[0],\n      setMessages = _useState8[1];\n\n  var ENDPOINT = 'localhost:8000';\n  useEffect(function () {\n    var _queryString$parse = queryString.parse(location.search),\n        name = _queryString$parse.name,\n        room = _queryString$parse.room;\n\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name: name,\n      room: room\n    }, function () {}); //to send an event - join is event name and the values of name and room\n    //are sent to backend\n\n    return function () {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]); //to update messages array whenever a message is sent by admin or user\n\n  useEffect(function () {\n    socket.on('message', function (message) {\n      setMessages([].concat(_toConsumableArray(messages), [message]));\n    });\n  }, [messages]); //function for sending messages\n\n  var sendMessage = function sendMessage(event) {\n    //to prevent refresh when we press key\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, function () {\n        return setMessage('');\n      });\n    }\n  };\n\n  console.log(message, messages);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InfoBar, {\n    room: room,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/mechi/Desktop/Projects/chat-application/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","off","on","sendMessage","event","preventDefault","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,cAAxB,C,CAAwC;;AACxC,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,IAAIC,MAAJ;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;;AAAA,kBACJP,QAAQ,CAAC,EAAD,CADJ;AAAA;AAAA,MACpBQ,IADoB;AAAA,MACfC,OADe;;AAAA,mBAEHT,QAAQ,CAAC,EAAD,CAFL;AAAA;AAAA,MAEpBU,IAFoB;AAAA,MAEdC,OAFc;;AAAA,mBAGGX,QAAQ,CAAC,EAAD,CAHX;AAAA;AAAA,MAGpBY,OAHoB;AAAA,MAGXC,UAHW;;AAAA,mBAIKb,QAAQ,CAAC,EAAD,CAJb;AAAA;AAAA,MAIpBc,QAJoB;AAAA,MAIVC,WAJU;;AAM3B,MAAMC,QAAQ,GAAG,gBAAjB;AAEAf,EAAAA,SAAS,CAAC,YAAI;AAAA,6BACSC,WAAW,CAACe,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CADT;AAAA,QACLV,IADK,sBACLA,IADK;AAAA,QACCE,IADD,sBACCA,IADD;;AAGZL,IAAAA,MAAM,GAAGF,EAAE,CAACa,QAAD,CAAX;AAEAP,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAL,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAmB;AAACX,MAAAA,IAAI,EAAJA,IAAD;AAAOE,MAAAA,IAAI,EAAJA;AAAP,KAAnB,EAAiC,YAAI,CAEpC,CAFD,EARY,CAUT;AACH;;AAEA,WAAO,YAAI;AACTL,MAAAA,MAAM,CAACc,IAAP,CAAY,YAAZ;AACAd,MAAAA,MAAM,CAACe,GAAP;AACD,KAHD;AAID,GAjBQ,EAiBP,CAACJ,QAAD,EAAUT,QAAQ,CAACW,MAAnB,CAjBO,CAAT,CAR2B,CA2B3B;;AACAjB,EAAAA,SAAS,CAAC,YAAI;AACZI,IAAAA,MAAM,CAACgB,EAAP,CAAU,SAAV,EAAoB,UAACT,OAAD,EAAW;AAC7BG,MAAAA,WAAW,8BAAKD,QAAL,IAAeF,OAAf,GAAX;AACD,KAFD;AAGD,GAJQ,EAIN,CAACE,QAAD,CAJM,CAAT,CA5B2B,CAkC3B;;AACA,MAAMQ,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAS;AAE3B;AACAA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGZ,OAAH,EAAW;AACTP,MAAAA,MAAM,CAACc,IAAP,CAAY,aAAZ,EAA0BP,OAA1B,EAAmC;AAAA,eAAKC,UAAU,CAAC,EAAD,CAAf;AAAA,OAAnC;AACD;AACF,GARD;;AAUAY,EAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ,EAAoBE,QAApB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEJ,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAUD,CAzDD;;AA2DA,eAAeJ,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport queryString from 'query-string'; //used to get data from URL\r\nimport io from \"socket.io-client\";\r\n\r\nimport './Chat.css';\r\nimport InfoBar from '../InfoBar/InfoBar';\r\n\r\nlet socket;\r\n\r\nconst Chat = ({location}) => {\r\n  const [name,setName] = useState('');\r\n  const [room, setRoom] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const ENDPOINT = 'localhost:8000'\r\n\r\n  useEffect(()=>{\r\n    const {name, room} = queryString.parse(location.search);\r\n\r\n    socket = io(ENDPOINT);\r\n\r\n    setName(name);\r\n    setRoom(room);\r\n\r\n    socket.emit('join',{name, room}, ()=>{\r\n\r\n    }) //to send an event - join is event name and the values of name and room\r\n    //are sent to backend\r\n\r\n    return ()=>{\r\n      socket.emit('disconnect');\r\n      socket.off();\r\n    }\r\n  },[ENDPOINT,location.search]);\r\n\r\n  //to update messages array whenever a message is sent by admin or user\r\n  useEffect(()=>{\r\n    socket.on('message',(message)=>{\r\n      setMessages([...messages, message]);\r\n    })\r\n  }, [messages]);\r\n\r\n  //function for sending messages\r\n  const sendMessage = (event)=>{\r\n\r\n    //to prevent refresh when we press key\r\n    event.preventDefault();\r\n\r\n    if(message){\r\n      socket.emit('sendMessage',message, ()=> setMessage(''));\r\n    }\r\n  }\r\n\r\n  console.log(message,messages);\r\n\r\n  return (\r\n    <div className=\"outerContainer\">\r\n      <div className=\"container\">\r\n        <InfoBar room={room} />\r\n\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}