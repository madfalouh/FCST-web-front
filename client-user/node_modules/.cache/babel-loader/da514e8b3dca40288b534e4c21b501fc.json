{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\mechi\\\\Desktop\\\\Projects\\\\chat-application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\mechi\\\\Desktop\\\\Projects\\\\chat-application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\mechi\\\\Desktop\\\\Projects\\\\chat-application\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string'; //used to get data from URL\n\nimport io from \"socket.io-client\";\nimport './Chat.css';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\nimport UserContainer from '../UserContainer/UserContainer';\nimport closeIcon from '../../images/closeIcon.png';\nimport onlineIcon from '../../images/onlineIcon.png';\nvar socket;\n\nvar Chat = function Chat(_ref) {\n  var location = _ref.location;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      room = _useState4[0],\n      setRoom = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      users = _useState6[0],\n      setUsers = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      message = _useState8[0],\n      setMessage = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      messages = _useState10[0],\n      setMessages = _useState10[1];\n\n  var ENDPOINT = 'localhost:8000';\n  useEffect(function () {\n    var _queryString$parse = queryString.parse(location.search),\n        name = _queryString$parse.name,\n        room = _queryString$parse.room;\n\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name: name,\n      room: room\n    }, function (error) {\n      if (error) {\n        alert(error);\n      }\n    }); //to send an event - join is event name and the values of name and room\n    //are sent to backend\n\n    return function () {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]); //to update messages array whenever a message is sent by admin or user\n\n  useEffect(function () {\n    socket.on('message', function (message) {\n      setMessages([].concat(_toConsumableArray(messages), [message]));\n    });\n    socket.on(\"roomData\", function (_ref2) {\n      var users = _ref2.users;\n      setUsers(users);\n    });\n  }, [messages]); //function for sending messages\n\n  var sendMessage = function sendMessage(event) {\n    //to prevent refresh when we press key\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, function () {\n        return setMessage('');\n      });\n    }\n  };\n\n  console.log(message, messages);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InfoBar, {\n    room: room,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Messages, {\n    messages: messages,\n    name: name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(UserContainer, {\n    users: users,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversation-list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new-message-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"\",\n    src: onlineIcon,\n    alt: \"online\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, room)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: closeIcon,\n    alt: \"close\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-message-list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Messages, {\n    messages: messages,\n    name: name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/mechi/Desktop/Projects/chat-application/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","Input","Messages","UserContainer","closeIcon","onlineIcon","socket","Chat","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","error","alert","off","on","sendMessage","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport queryString from 'query-string'; //used to get data from URL\r\nimport io from \"socket.io-client\";\r\n\r\nimport './Chat.css';\r\nimport InfoBar from '../InfoBar/InfoBar';\r\nimport Input from '../Input/Input';\r\nimport Messages from '../Messages/Messages';\r\nimport UserContainer from '../UserContainer/UserContainer';\r\n\r\nimport closeIcon from '../../images/closeIcon.png';\r\nimport onlineIcon from '../../images/onlineIcon.png';\r\n\r\n\r\nlet socket;\r\n\r\nconst Chat = ({location}) => {\r\n  const [name,setName] = useState('');\r\n  const [room, setRoom] = useState('');\r\n  const [users, setUsers] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const ENDPOINT = 'localhost:8000'\r\n\r\n  useEffect(()=>{\r\n    const {name, room} = queryString.parse(location.search);\r\n\r\n    socket = io(ENDPOINT);\r\n\r\n    setName(name);\r\n    setRoom(room);\r\n\r\n    socket.emit('join',{name, room}, (error)=>{\r\n      if(error) {\r\n              alert(error);\r\n      }\r\n    }) //to send an event - join is event name and the values of name and room\r\n    //are sent to backend\r\n\r\n    return ()=>{\r\n      socket.emit('disconnect');\r\n      socket.off();\r\n    }\r\n  },[ENDPOINT,location.search]);\r\n\r\n  //to update messages array whenever a message is sent by admin or user\r\n  useEffect(()=>{\r\n    socket.on('message',(message)=>{\r\n      setMessages([...messages, message]);\r\n    })\r\n\r\n    socket.on(\"roomData\", ({ users }) => {\r\n      setUsers(users);\r\n    });\r\n\r\n  }, [messages]);\r\n\r\n  //function for sending messages\r\n  const sendMessage = (event)=>{\r\n\r\n    //to prevent refresh when we press key\r\n    event.preventDefault();\r\n\r\n    if(message){\r\n      socket.emit('sendMessage',message, ()=> setMessage(''));\r\n    }\r\n  }\r\n\r\n  console.log(message,messages);\r\n\r\n  return (\r\n    <div>\r\n    <div className=\"outerContainer\">\r\n      <div className=\"container\">\r\n        <InfoBar room={room} />\r\n        <Messages messages={messages} name={name} />\r\n        <Input message={message} setMessage={setMessage} sendMessage={sendMessage}/>\r\n      </div>\r\n      <UserContainer users={users}/>\r\n    </div>\r\n\r\n    <div className=\"chat-container\">\r\n      <div className=\"search-container\">\r\n        <input type=\"text\" placeholder=\"Search\" />\r\n      </div>\r\n\r\n      <div className=\"conversation-list\">\r\n\r\n      </div>\r\n\r\n      <div className=\"new-message-container\">\r\n\r\n      </div>\r\n\r\n      <div className=\"chat-title\">\r\n          <div className=\"\">\r\n            <img className=\"\" src={onlineIcon} alt=\"online\" />\r\n            <h3>{room}</h3>\r\n          </div>\r\n          <div className=\"\">\r\n            <a href=\"/\"><img src={closeIcon} alt=\"close\" /></a>\r\n          </div>\r\n      </div>\r\n\r\n      <div className=\"chat-message-list\">\r\n        <Messages messages={messages} name={name} />\r\n      </div>\r\n\r\n      <div className=\"chat-form\">\r\n        <Input message={message} setMessage={setMessage} sendMessage={sendMessage}/>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}