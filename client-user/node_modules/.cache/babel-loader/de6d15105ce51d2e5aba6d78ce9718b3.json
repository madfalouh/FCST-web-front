{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Documents\\\\GitHub\\\\FCST-web-front\\\\src\\\\pages\\\\Chat.js\",\n    _s = $RefreshSig$();\n\n/**\n * Sample React Native Chat\n * https://github.com/facebook/react-native\n *\n * @format\n * \n */\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport { SafeAreaView, ScrollView, StatusBar, StyleSheet, Text, useColorScheme, View, FlatList, Image, TouchableOpacity } from 'react-native';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = () => {\n  _s();\n\n  const navigation = useNavigation();\n  const route = useRoute();\n  const [messages, setMessages] = useState([]);\n  const [senderId, setSenderId] = useState(route.params.record.sender_id);\n  const [receiverId, setReceiverId] = useState(route.params.record.receiver_id);\n  const [name, setName] = useState(route.params.record.name);\n  const [image_path, setImage_path] = useState(route.params.record.image_path);\n  const ws = useRef(null);\n  useEffect(() => {\n    console.log(\"initiateSocketConnection\"); // enter your websocket url\n\n    ws.current = new WebSocket(`wss://`);\n\n    ws.current.onopen = () => {\n      console.log(\"connection establish open\");\n    };\n\n    ws.current.onclose = () => {\n      console.log(\"connection establish closed\");\n    };\n\n    return () => {\n      ws.current.close();\n    };\n  }, []);\n  useEffect(() => {\n    setMessages([{\n      _id: receiverId,\n      // receiver id\n      text: 'Hello developer',\n      createdAt: new Date(),\n      user: {\n        _id: senderId,\n        // sender id\n        name: name,\n        avatar: image_path\n      }\n    }]);\n  }, []);\n  useEffect(() => {\n    ws.current.onmessage = e => {\n      const response = JSON.parse(e.data);\n      console.log(\"onmessage=>\", JSON.stringify(response));\n      var sentMessages = {\n        _id: response.receiverId,\n        text: response.message,\n        createdAt: new Date(response.createdAt * 1000),\n        user: {\n          _id: response.senderId,\n          name: name,\n          avatar: image_path\n        }\n      };\n      setMessages(previousMessages => GiftedChat.append(previousMessages, sentMessages));\n    };\n  }, []);\n  const onSend = useCallback((messages = []) => {\n    let obj = {\n      \"senderId\": senderId,\n      \"receiverId\": receiverId,\n      \"message\": messages[0].text,\n      \"action\": \"message\"\n    };\n    ws.current.send(JSON.stringify(obj));\n    setMessages(previousMessages => GiftedChat.append(previousMessages, messages));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(View, {\n      style: {\n        padding: 15,\n        marginTop: 50,\n        backgroundColor: \"black\",\n        alignItems: \"center\",\n        justifyContent: 'center',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TouchableOpacity, {\n        style: {\n          position: 'absolute',\n          left: 10,\n          borderColor: \"#fff\",\n          borderWidth: 1,\n          padding: 7,\n          borderRadius: 10\n        },\n        onPress: () => {\n          navigation.goBack();\n        },\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          style: {\n            fontSize: 15,\n            fontWeight: 'bold',\n            color: \"#fff\"\n          },\n          children: `Back`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: 'bold',\n          color: \"#fff\"\n        },\n        children: `Chat list`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GiftedChat, {\n      messages: messages,\n      onSend: messages => onSend(messages),\n      user: {\n        _id: senderId // set sender id\n\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"ls/RG80mgjbjtyZtRXjZoSD7c0A=\", false, function () {\n  return [useNavigation, useRoute];\n});\n\n_c = Chat;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  }\n});\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/hp/Documents/GitHub/FCST-web-front/src/pages/Chat.js"],"names":["React","useState","useRef","useCallback","useEffect","SafeAreaView","ScrollView","StatusBar","StyleSheet","Text","useColorScheme","View","FlatList","Image","TouchableOpacity","useNavigation","useRoute","GiftedChat","Chat","navigation","route","messages","setMessages","senderId","setSenderId","params","record","sender_id","receiverId","setReceiverId","receiver_id","name","setName","image_path","setImage_path","ws","console","log","current","WebSocket","onopen","onclose","close","_id","text","createdAt","Date","user","avatar","onmessage","e","response","JSON","parse","data","stringify","sentMessages","message","previousMessages","append","onSend","obj","send","styles","container","padding","marginTop","backgroundColor","alignItems","justifyContent","width","position","left","borderColor","borderWidth","borderRadius","goBack","fontSize","fontWeight","color","create","flex"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,WAAlC,EAA+CC,SAA/C,QAAgE,OAAhE;AACA,SACEC,YADF,EAEEC,UAFF,EAGEC,SAHF,EAIEC,UAJF,EAKEC,IALF,EAMEC,cANF,EAOEC,IAPF,EAQEC,QARF,EASEC,KATF,EAUEC,gBAVF,QAWO,cAXP;AAYA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,0BAAxC;AACA,SAASC,UAAT,QAA2B,0BAA3B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMC,UAAU,GAAGJ,aAAa,EAAhC;AACA,QAAMK,KAAK,GAAGJ,QAAQ,EAAtB;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAACmB,KAAK,CAACK,MAAN,CAAaC,MAAb,CAAoBC,SAArB,CAAxC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B5B,QAAQ,CAACmB,KAAK,CAACK,MAAN,CAAaC,MAAb,CAAoBI,WAArB,CAA5C;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB/B,QAAQ,CAACmB,KAAK,CAACK,MAAN,CAAaC,MAAb,CAAoBK,IAArB,CAAhC;AACA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8BjC,QAAQ,CAACmB,KAAK,CAACK,MAAN,CAAaC,MAAb,CAAoBO,UAArB,CAA5C;AACA,QAAME,EAAE,GAAGjC,MAAM,CAAC,IAAD,CAAjB;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACdgC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EADc,CAEd;;AACAF,IAAAA,EAAE,CAACG,OAAH,GAAa,IAAIC,SAAJ,CAAe,QAAf,CAAb;;AACAJ,IAAAA,EAAE,CAACG,OAAH,CAAWE,MAAX,GAAoB,MAAM;AACxBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD,KAFD;;AAGAF,IAAAA,EAAE,CAACG,OAAH,CAAWG,OAAX,GAAqB,MAAM;AACzBL,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD,KAFD;;AAGA,WAAO,MAAM;AACXF,MAAAA,EAAE,CAACG,OAAH,CAAWI,KAAX;AACD,KAFD;AAGD,GAbQ,EAaN,EAbM,CAAT;AAeAtC,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,WAAW,CAAC,CACV;AACEqB,MAAAA,GAAG,EAAEf,UADP;AACkB;AAChBgB,MAAAA,IAAI,EAAE,iBAFR;AAGEC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,EAHb;AAIEC,MAAAA,IAAI,EAAE;AACJJ,QAAAA,GAAG,EAAEpB,QADD;AACY;AAChBQ,QAAAA,IAAI,EAAEA,IAFF;AAGJiB,QAAAA,MAAM,EAAEf;AAHJ;AAJR,KADU,CAAD,CAAX;AAYD,GAbQ,EAaN,EAbM,CAAT;AAeA7B,EAAAA,SAAS,CAAC,MAAM;AACd+B,IAAAA,EAAE,CAACG,OAAH,CAAWW,SAAX,GAAuBC,CAAC,IAAI;AAC1B,YAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAC,CAACI,IAAb,CAAjB;AACAlB,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2Be,IAAI,CAACG,SAAL,CAAeJ,QAAf,CAA3B;AACA,UAAIK,YAAY,GAAG;AACjBb,QAAAA,GAAG,EAAEQ,QAAQ,CAACvB,UADG;AAEjBgB,QAAAA,IAAI,EAAEO,QAAQ,CAACM,OAFE;AAGjBZ,QAAAA,SAAS,EAAE,IAAIC,IAAJ,CAASK,QAAQ,CAACN,SAAT,GAAqB,IAA9B,CAHM;AAIjBE,QAAAA,IAAI,EAAE;AACJJ,UAAAA,GAAG,EAAEQ,QAAQ,CAAC5B,QADV;AAEJQ,UAAAA,IAAI,EAAEA,IAFF;AAGJiB,UAAAA,MAAM,EAAEf;AAHJ;AAJW,OAAnB;AAUAX,MAAAA,WAAW,CAACoC,gBAAgB,IAAIzC,UAAU,CAAC0C,MAAX,CAAkBD,gBAAlB,EAAoCF,YAApC,CAArB,CAAX;AACD,KAdD;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,QAAMI,MAAM,GAAGzD,WAAW,CAAC,CAACkB,QAAQ,GAAG,EAAZ,KAAmB;AAC5C,QAAIwC,GAAG,GAAG;AACR,kBAAYtC,QADJ;AAER,oBAAcK,UAFN;AAGR,iBAAWP,QAAQ,CAAC,CAAD,CAAR,CAAYuB,IAHf;AAIR,gBAAU;AAJF,KAAV;AAMAT,IAAAA,EAAE,CAACG,OAAH,CAAWwB,IAAX,CAAgBV,IAAI,CAACG,SAAL,CAAeM,GAAf,CAAhB;AACAvC,IAAAA,WAAW,CAACoC,gBAAgB,IAAIzC,UAAU,CAAC0C,MAAX,CAAkBD,gBAAlB,EAAoCrC,QAApC,CAArB,CAAX;AACD,GATyB,EASvB,EATuB,CAA1B;AAWA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAE0C,MAAM,CAACC,SAApB;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AACXC,QAAAA,OAAO,EAAE,EADE;AAEXC,QAAAA,SAAS,EAAE,EAFA;AAGXC,QAAAA,eAAe,EAAE,OAHN;AAIXC,QAAAA,UAAU,EAAE,QAJD;AAKXC,QAAAA,cAAc,EAAE,QALL;AAMXC,QAAAA,KAAK,EAAE;AANI,OAAb;AAAA,8BAQE,QAAC,gBAAD;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE,UADL;AAELC,UAAAA,IAAI,EAAE,EAFD;AAGLC,UAAAA,WAAW,EAAE,MAHR;AAILC,UAAAA,WAAW,EAAE,CAJR;AAKLT,UAAAA,OAAO,EAAE,CALJ;AAMLU,UAAAA,YAAY,EAAE;AANT,SADT;AASE,QAAA,OAAO,EAAE,MAAM;AACbxD,UAAAA,UAAU,CAACyD,MAAX;AACD,SAXH;AAAA,+BAaE,QAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACLC,YAAAA,QAAQ,EAAE,EADL;AAELC,YAAAA,UAAU,EAAE,MAFP;AAGLC,YAAAA,KAAK,EAAE;AAHF,WADT;AAAA,oBAMG;AANH;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA,cARF,eA6BE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AACXF,UAAAA,QAAQ,EAAE,EADC;AAEXC,UAAAA,UAAU,EAAE,MAFD;AAGXC,UAAAA,KAAK,EAAE;AAHI,SAAb;AAAA,kBAIK;AAJL;AAAA;AAAA;AAAA;AAAA,cA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAoCE,QAAC,UAAD;AACE,MAAA,QAAQ,EAAE1D,QADZ;AAEE,MAAA,MAAM,EAAEA,QAAQ,IAAIuC,MAAM,CAACvC,QAAD,CAF5B;AAGE,MAAA,IAAI,EAAE;AACJsB,QAAAA,GAAG,EAAEpB,QADD,CACY;;AADZ;AAHR;AAAA;AAAA;AAAA;AAAA,YApCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8CD,CAnHD;;GAAML,I;UACeH,a,EACLC,Q;;;KAFVE,I;AAqHN,MAAM6C,MAAM,GAAGvD,UAAU,CAACwE,MAAX,CAAkB;AAC/BhB,EAAAA,SAAS,EAAE;AACTiB,IAAAA,IAAI,EAAE,CADG;AAETd,IAAAA,eAAe,EAAE;AAFR;AADoB,CAAlB,CAAf;AAMA,eAAejD,IAAf","sourcesContent":["/**\n * Sample React Native Chat\n * https://github.com/facebook/react-native\n *\n * @format\n * @flow strict-local\n */\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport {\n  SafeAreaView,\n  ScrollView,\n  StatusBar,\n  StyleSheet,\n  Text,\n  useColorScheme,\n  View,\n  FlatList,\n  Image,\n  TouchableOpacity\n} from 'react-native';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { GiftedChat } from 'react-native-gifted-chat'\n\nconst Chat = () => {\n  const navigation = useNavigation()\n  const route = useRoute();\n  const [messages, setMessages] = useState([]);\n  const [senderId, setSenderId] = useState(route.params.record.sender_id)\n  const [receiverId, setReceiverId] = useState(route.params.record.receiver_id)\n  const [name, setName] = useState(route.params.record.name)\n  const [image_path, setImage_path] = useState(route.params.record.image_path)\n  const ws = useRef(null);\n\n  useEffect(() => {\n    console.log(\"initiateSocketConnection\")\n    // enter your websocket url\n    ws.current = new WebSocket(`wss://`)\n    ws.current.onopen = () => {\n      console.log(\"connection establish open\")\n    };\n    ws.current.onclose = () => {\n      console.log(\"connection establish closed\");\n    }\n    return () => {\n      ws.current.close();\n    };\n  }, [])\n\n  useEffect(() => {\n    setMessages([\n      {\n        _id: receiverId,// receiver id\n        text: 'Hello developer',\n        createdAt: new Date(),\n        user: {\n          _id: senderId,  // sender id\n          name: name,\n          avatar: image_path,\n        },\n      },\n    ])\n  }, [])\n\n  useEffect(() => {\n    ws.current.onmessage = e => {\n      const response = JSON.parse(e.data);\n      console.log(\"onmessage=>\", JSON.stringify(response));\n      var sentMessages = {\n        _id: response.receiverId,\n        text: response.message,\n        createdAt: new Date(response.createdAt * 1000),\n        user: {\n          _id: response.senderId,\n          name: name,\n          avatar: image_path,\n        },\n      }\n      setMessages(previousMessages => GiftedChat.append(previousMessages, sentMessages))\n    };\n  }, []);\n\n  const onSend = useCallback((messages = []) => {\n    let obj = {\n      \"senderId\": senderId,\n      \"receiverId\": receiverId,\n      \"message\": messages[0].text,\n      \"action\": \"message\"\n    }\n    ws.current.send(JSON.stringify(obj))\n    setMessages(previousMessages => GiftedChat.append(previousMessages, messages))\n  }, [])\n\n  return (\n    <View style={styles.container}>\n      <View style={{\n        padding: 15,\n        marginTop: 50,\n        backgroundColor: \"black\",\n        alignItems: \"center\",\n        justifyContent: 'center',\n        width: '100%'\n      }}>\n        <TouchableOpacity\n          style={{\n            position: 'absolute',\n            left: 10,\n            borderColor: \"#fff\",\n            borderWidth: 1,\n            padding: 7,\n            borderRadius: 10\n          }}\n          onPress={() => {\n            navigation.goBack()\n          }}\n        >\n          <Text\n            style={{\n              fontSize: 15,\n              fontWeight: 'bold',\n              color: \"#fff\",\n            }}\n          >{`Back`}</Text>\n        </TouchableOpacity>\n        <Text style={{\n          fontSize: 20,\n          fontWeight: 'bold',\n          color: \"#fff\"\n        }}>{`Chat list`}</Text>\n      </View>\n      <GiftedChat\n        messages={messages}\n        onSend={messages => onSend(messages)}\n        user={{\n          _id: senderId,  // set sender id\n        }}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  }\n});\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}